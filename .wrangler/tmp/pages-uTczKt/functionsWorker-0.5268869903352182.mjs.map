{
  "version": 3,
  "sources": ["../bundle-jluBZ1/checked-fetch.js", "../../../node_modules/@cloudflare/ai/dist/index.js", "../../../functions/api/describe.ts", "../../../functions/api/fiction.ts", "../../../functions/api/image.ts", "functionsRoutes-0.7762548026469105.mjs", "../../../node_modules/path-to-regexp/src/index.ts", "../../../node_modules/wrangler/templates/pages-template-worker.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-jluBZ1/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-jluBZ1/middleware-loader.entry.ts"],
  "sourceRoot": "D:\\Learning\\picstweakr\\.wrangler\\tmp\\pages-uTczKt\\functionsWorker-0.5268869903352182.mjs",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t  );\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "var e;!function(e){e.String=\"str\",e.Bool=\"bool\",e.Float16=\"float16\",e.Float32=\"float32\",e.Int16=\"int16\",e.Int32=\"int32\",e.Int64=\"int64\",e.Int8=\"int8\",e.Uint16=\"uint16\",e.Uint32=\"uint32\",e.Uint64=\"uint64\",e.Uint8=\"uint8\"}(e||(e={}));const t=Object.getPrototypeOf(Uint8Array);function s(e){return Array.isArray(e)||e instanceof t}function n(e){return e instanceof t?e.length:e.flat(1/0).reduce(((e,s)=>e+(s instanceof t?s.length:1)),0)}function E(t,n){if(!s(n)){switch(t){case e.Bool:if(\"boolean\"==typeof n)return;break;case e.Float16:case e.Float32:if(\"number\"==typeof n)return;break;case e.Int8:case e.Uint8:case e.Int16:case e.Uint16:case e.Int32:case e.Uint32:if(Number.isInteger(n))return;break;case e.Int64:case e.Uint64:if(\"bigint\"==typeof n)return;break;case e.String:if(\"string\"==typeof n)return}throw new Error(`unexpected type \"${t}\" with value \"${n}\".`)}n.forEach((e=>E(t,e)))}function r(t,n){if(s(n))return[...n].map((e=>r(t,e)));switch(t){case e.String:case e.Bool:case e.Float16:case e.Float32:case e.Int8:case e.Uint8:case e.Int16:case e.Uint16:case e.Uint32:case e.Int32:return n;case e.Int64:case e.Uint64:return n.toString()}throw new Error(`unexpected type \"${t}\" with value \"${n}\".`)}function A(t,n){if(s(n))return n.map((e=>A(t,e)));switch(t){case e.String:case e.Bool:case e.Float16:case e.Float32:case e.Int8:case e.Uint8:case e.Int16:case e.Uint16:case e.Uint32:case e.Int32:return n;case e.Int64:case e.Uint64:return BigInt(n)}throw new Error(`unexpected type \"${t}\" with value \"${n}\".`)}class a{type;value;name;shape;constructor(e,t,r={}){this.type=e,this.value=t,E(e,this.value),void 0===r.shape?s(this.value)?this.shape=[n(t)]:this.shape=[]:this.shape=r.shape,function(e,t){if(0===e.length&&!s(t))return;const E=e.reduce(((e,t)=>{if(!Number.isInteger(t))throw new Error(`expected shape to be array-like of integers but found non-integer element \"${t}\"`);return e*t}),1);if(E!=n(t))throw new Error(`invalid shape: expected ${E} elements for shape ${e} but value array has length ${t.length}`)}(this.shape,this.value),this.name=r.name||null}static fromJSON(e){const{type:t,shape:s,value:n,b64Value:E,name:r}=e,i={shape:s,name:r};if(void 0!==E){const e=function(e,t){const s=atob(e),n=new Uint8Array(s.length);for(let e=0;e<s.length;e++)n[e]=s.charCodeAt(e);const E=new DataView(n.buffer).buffer;switch(t){case\"float32\":return new Float32Array(E);case\"float64\":return new Float64Array(E);case\"int32\":return new Int32Array(E);case\"int64\":return new BigInt64Array(E);default:throw Error(`invalid data type for base64 input: ${t}`)}}(E,t)[0];return new a(t,e,i)}return new a(t,A(t,n),i)}toJSON(){return{type:this.type,shape:this.shape,name:this.name,value:r(this.type,this.value)}}}var i;!function(e){e[e.NONE=0]=\"NONE\",e[e.CARRY_SYSTEM_INST=1]=\"CARRY_SYSTEM_INST\",e[e.ABSORB_ROLE=2]=\"ABSORB_ROLE\",e[e.APPEND_LAST_SYSTEM=3]=\"APPEND_LAST_SYSTEM\"}(i||(i={}));const R={bare:{system:{flag:i.ABSORB_ROLE},user:{flag:i.APPEND_LAST_SYSTEM},assistant:{pre:\" \",post:\" \"}},sqlcoder:{system:{flag:i.ABSORB_ROLE},user:{flag:i.ABSORB_ROLE},assistant:{flag:i.ABSORB_ROLE},global:{template:\"### Task\\nGenerate a SQL query to answer [QUESTION]{user}[/QUESTION]\\n\\n### Database Schema\\nThe query will run on a database with the following schema:\\n{system}\\n\\n### Answer\\nGiven the database schema, here is the SQL query that [QUESTION]{user}[/QUESTION]\\n[SQL]\"}},inst:{system:{flag:i.ABSORB_ROLE},user:{pre:\"[INST] \",post:\" [/INST]\",flag:i.APPEND_LAST_SYSTEM},assistant:{pre:\" \",post:\" \"}},llama2:{system:{pre:\"[INST] <<SYS>>\\n\",post:\"\\n<</SYS>>\\n\\n\"},user:{pre:\"<s>[INST] \",post:\" [/INST]\",flag:i.CARRY_SYSTEM_INST},assistant:{pre:\" \",post:\"</s>\"}},deepseek:{system:{post:\"\\n\"},user:{pre:\"### Instruction:\\n\",post:\"\\n\"},assistant:{pre:\"### Response:\\n\",post:\"\\n\"},global:{post:\"### Response:\\n\"}},falcon:{system:{post:\"\\n\"},user:{pre:\"User: \",post:\"\\n\"},assistant:{pre:\"Assistant: \",post:\"\\n\"},global:{post:\"Assistant: \\n\"}},openchat:{system:{flag:i.ABSORB_ROLE},user:{pre:\"GPT4 User: \",post:\"<|end_of_turn|>\",flag:i.APPEND_LAST_SYSTEM},assistant:{pre:\"GPT4 Assistant: \",post:\"<|end_of_turn|>\"},global:{post:\"GPT4 Assistant:\"}},\"openchat-alt\":{system:{flag:i.ABSORB_ROLE},user:{pre:\"<s>Human: \",post:\"<|end_of_turn|>\",flag:i.APPEND_LAST_SYSTEM},assistant:{pre:\"Assistant: \",post:\"<|end_of_turn|>\"},global:{post:\"Assistant: \"}},tinyllama:{system:{pre:\"<|system|>\\n\",post:\"</s>\\n\"},user:{pre:\"<|user|>\\n\",post:\"</s>\\n\"},assistant:{pre:\"<|assistant|>\\n\",post:\"</s>\\n\"},global:{post:\"<|assistant|>\\n\"}},chatml:{system:{pre:\"<|im_start|>system\\n\",post:\"<|im_end|>\\n\"},user:{pre:\"<|im_start|>user\\n\",post:\"<|im_end|>\\n\"},assistant:{pre:\"<|im_start|>assistant\\n\",post:\"<|im_end|>\\n\"},global:{post:\"<|im_start|>assistant\\n\"}},\"orca-hashes\":{system:{pre:\"### System:\\n\",post:\"\\n\\n\"},user:{pre:\"### User:\\n\",post:\"\\n\\n\"},assistant:{pre:\"### Assistant:\\n\",post:\"\\n\\n\"},global:{post:\"### Assistant:\\n\\n\"}},\"codellama-instruct\":{system:{pre:\"[INST] \",post:\"\\n\"},user:{pre:\"[INST] \",post:\" [/INST]\\n\",flag:i.CARRY_SYSTEM_INST},assistant:{post:\"\\n\"}},\"mistral-instruct\":{system:{pre:\"<s>[INST] \",post:\" \"},user:{pre:\"[INST] \",post:\" [/INST]\",flag:i.CARRY_SYSTEM_INST},assistant:{pre:\" \",post:\"</s>\"}},zephyr:{system:{pre:\"<s><|system|>\\n\",post:\"</s>\\n\"},user:{pre:\"<|user|>\\n\",post:\"</s>\\n\"},assistant:{pre:\"<|assistant|>\\n\",post:\"</s>\\n\"},global:{post:\"<|assistant|>\\n\"}}},o=(e,t)=>{let s=\"\";const n={lastSystem:!1,systemCount:0,lastUser:!1,userCount:0,lastAssistant:!1,assistantCount:0};for(const E of e)switch(E.role){case\"system\":n.systemCount++,n.lastSystem=E.content,s+=p(t,E.role,E.content,n);break;case\"user\":n.userCount++,n.lastUser=E.content,s+=p(t,E.role,E.content,n);break;case\"assistant\":n.assistantCount++,n.lastAssistant=E.content,s+=p(t,E.role,E.content,n)}return s=p(t,\"global\",s,n),s},O=(e,t,s,n)=>\"pre\"==s&&R[e][t].flag==i.CARRY_SYSTEM_INST&&1==n.systemCount&&1==n.userCount?\"\":R[e][t][s]||\"\",p=(e,t,s,n)=>R[e]&&R[e][t]?R[e][t].flag==i.ABSORB_ROLE?\"\":(R[e][t].flag==i.APPEND_LAST_SYSTEM&&n.lastSystem&&1==n.userCount&&(s=`${n.lastSystem}${-1==[\":\",\".\",\"!\",\"?\"].indexOf(n.lastSystem.slice(-1))?\":\":\"\"} ${s}`),R[e][t].template?R[e][t].template.replaceAll(\"{user}\",n.lastUser).replaceAll(\"{system}\",n.lastSystem).replaceAll(\"{assistant}\",n.lastAssistant):O(e,t,\"pre\",n)+(s||\"\")+O(e,t,\"post\",n)):s||\"\";const I=[\"TENCH\",\"GOLDFISH\",\"WHITE SHARK\",\"TIGER SHARK\",\"HAMMERHEAD SHARK\",\"ELECTRIC RAY\",\"STINGRAY\",\"ROOSTER\",\"HEN\",\"OSTRICH\",\"BRAMBLING\",\"GOLDFINCH\",\"HOUSE FINCH\",\"SNOWBIRD\",\"INDIGO FINCH\",\"ROBIN\",\"BULBUL\",\"JAY\",\"MAGPIE\",\"CHICKADEE\",\"WATER OUZEL\",\"KITE\",\"BALD EAGLE\",\"VULTURE\",\"GREAT GREY OWL\",\"FIRE SALAMANDER\",\"NEWT\",\"EFT\",\"SPOTTED SALAMANDER\",\"AXOLOTL\",\"BULL FROG\",\"TREE FROG\",\"TAILED FROG\",\"LOGGERHEAD\",\"LEATHERBACK TURTLE\",\"MUD TURTLE\",\"TERRAPIN\",\"BOX TURTLE\",\"BANDED GECKO\",\"COMMON IGUANA\",\"AMERICAN CHAMELEON\",\"WHIPTAIL\",\"AGAMA\",\"FRILLED LIZARD\",\"ALLIGATOR LIZARD\",\"GILA MONSTER\",\"GREEN LIZARD\",\"AFRICAN CHAMELEON\",\"KOMODO DRAGON\",\"AFRICAN CROCODILE\",\"AMERICAN ALLIGATOR\",\"TRICERATOPS\",\"THUNDER SNAKE\",\"RINGNECK SNAKE\",\"HOGNOSE SNAKE\",\"GREEN SNAKE\",\"KING SNAKE\",\"GARTER SNAKE\",\"WATER SNAKE\",\"VINE SNAKE\",\"NIGHT SNAKE\",\"BOA\",\"ROCK PYTHON\",\"COBRA\",\"GREEN MAMBA\",\"SEA SNAKE\",\"HORNED VIPER\",\"DIAMONDBACK\",\"SIDEWINDER\",\"TRILOBITE\",\"HARVESTMAN\",\"SCORPION\",\"GARDEN SPIDER\",\"BARN SPIDER\",\"GARDEN SPIDER\",\"BLACK WIDOW\",\"TARANTULA\",\"WOLF SPIDER\",\"TICK\",\"CENTIPEDE\",\"GROUSE\",\"PTARMIGAN\",\"RUFFED GROUSE\",\"PRAIRIE CHICKEN\",\"PEACOCK\",\"QUAIL\",\"PARTRIDGE\",\"AFRICAN GREY\",\"MACAW\",\"COCKATOO\",\"LORIKEET\",\"COUCAL\",\"BEE EATER\",\"HORNBILL\",\"HUMMINGBIRD\",\"JACAMAR\",\"TOUCAN\",\"DRAKE\",\"MERGANSER\",\"GOOSE\",\"BLACK SWAN\",\"TUSKER\",\"ECHIDNA\",\"PLATYPUS\",\"WALLABY\",\"KOALA\",\"WOMBAT\",\"JELLYFISH\",\"SEA ANEMONE\",\"BRAIN CORAL\",\"FLATWORM\",\"NEMATODE\",\"CONCH\",\"SNAIL\",\"SLUG\",\"SEA SLUG\",\"CHITON\",\"CHAMBERED NAUTILUS\",\"DUNGENESS CRAB\",\"ROCK CRAB\",\"FIDDLER CRAB\",\"KING CRAB\",\"AMERICAN LOBSTER\",\"SPINY LOBSTER\",\"CRAYFISH\",\"HERMIT CRAB\",\"ISOPOD\",\"WHITE STORK\",\"BLACK STORK\",\"SPOONBILL\",\"FLAMINGO\",\"LITTLE BLUE HERON\",\"AMERICAN EGRET\",\"BITTERN\",\"CRANE\",\"LIMPKIN\",\"EUROPEAN GALLINULE\",\"AMERICAN COOT\",\"BUSTARD\",\"RUDDY TURNSTONE\",\"RED-BACKED SANDPIPER\",\"REDSHANK\",\"DOWITCHER\",\"OYSTERCATCHER\",\"PELICAN\",\"KING PENGUIN\",\"ALBATROSS\",\"GREY WHALE\",\"KILLER WHALE\",\"DUGONG\",\"SEA LION\",\"CHIHUAHUA\",\"JAPANESE SPANIEL\",\"MALTESE DOG\",\"PEKINESE\",\"SHIH-TZU\",\"BLENHEIM SPANIEL\",\"PAPILLON\",\"TOY TERRIER\",\"RHODESIAN RIDGEBACK\",\"AFGHAN HOUND\",\"BASSET\",\"BEAGLE\",\"BLOODHOUND\",\"BLUETICK\",\"COONHOUND\",\"WALKER HOUND\",\"ENGLISH FOXHOUND\",\"REDBONE\",\"BORZOI\",\"IRISH WOLFHOUND\",\"ITALIAN GREYHOUND\",\"WHIPPET\",\"IBIZAN HOUND\",\"NORWEGIAN ELKHOUND\",\"OTTERHOUND\",\"SALUKI\",\"SCOTTISH DEERHOUND\",\"WEIMARANER\",\"STAFFORDSHIRE BULLTERRIER\",\"STAFFORDSHIRE TERRIER\",\"BEDLINGTON TERRIER\",\"BORDER TERRIER\",\"KERRY BLUE TERRIER\",\"IRISH TERRIER\",\"NORFOLK TERRIER\",\"NORWICH TERRIER\",\"YORKSHIRE TERRIER\",\"WIRE-HAIRED FOX TERRIER\",\"LAKELAND TERRIER\",\"SEALYHAM TERRIER\",\"AIREDALE\",\"CAIRN\",\"AUSTRALIAN TERRIER\",\"DANDIE DINMONT\",\"BOSTON BULL\",\"MINIATURE SCHNAUZER\",\"GIANT SCHNAUZER\",\"STANDARD SCHNAUZER\",\"SCOTCH TERRIER\",\"TIBETAN TERRIER\",\"SILKY TERRIER\",\"WHEATEN TERRIER\",\"WHITE TERRIER\",\"LHASA\",\"RETRIEVER\",\"CURLY-COATED RETRIEVER\",\"GOLDEN RETRIEVER\",\"LABRADOR RETRIEVER\",\"CHESAPEAKE BAY RETRIEVER\",\"SHORT-HAIRED POINTER\",\"VISLA\",\"ENGLISH SETTER\",\"IRISH SETTER\",\"GORDON SETTER\",\"BRITTANY SPANIEL\",\"CLUMBER\",\"ENGLISH SPRINGER\",\"WELSH SPRINGER SPANIEL\",\"COCKER SPANIEL\",\"SUSSEX SPANIEL\",\"IRISH WATERSPANIEL\",\"KUVASZ\",\"SCHIPPERKE\",\"GROENENDAEL\",\"MALINOIS\",\"BRIARD\",\"KELPIE\",\"KOMONDOR\",\"OLD ENGLISH SHEEPDOG\",\"SHETLAND SHEEPDOG\",\"COLLIE\",\"BORDER COLLIE\",\"BOUVIER DES FLANDRES\",\"ROTTWEILER\",\"GERMAN SHEPHERD\",\"DOBERMAN\",\"MINIATURE PINSCHER\",\"GREATER SWISS MOUNTAIN DOG\",\"BERNESE MOUNTAIN DOG\",\"APPENZELLER\",\"ENTLEBUCHER\",\"BOXER\",\"BULL MASTIFF\",\"TIBETAN MASTIFF\",\"FRENCH BULLDOG\",\"GREAT DANE\",\"SAINT BERNARD\",\"ESKIMO DOG\",\"MALAMUTE\",\"SIBERIAN HUSKY\",\"DALMATIAN\",\"AFFENPINSCHER\",\"BASENJI\",\"PUG\",\"LEONBERG\",\"NEWFOUNDLAND\",\"GREAT PYRENEES\",\"SAMOYED\",\"POMERANIAN\",\"CHOW\",\"KEESHOND\",\"BRABANCON GRIFFON\",\"PEMBROKE\",\"CARDIGAN\",\"TOY POODLE\",\"MINIATURE POODLE\",\"STANDARD POODLE\",\"MEXICAN HAIRLESS\",\"TIMBER WOLF\",\"WHITE WOLF\",\"RED WOLF\",\"COYOTE\",\"DINGO\",\"DHOLE\",\"AFRICAN HUNTING DOG\",\"HYENA\",\"RED FOX\",\"KIT FOX\",\"ARCTIC FOX\",\"GREY FOX\",\"TABBY\",\"TIGER CAT\",\"PERSIAN CAT\",\"SIAMESE CAT\",\"EGYPTIAN CAT\",\"COUGAR\",\"LYNX\",\"LEOPARD\",\"SNOW LEOPARD\",\"JAGUAR\",\"LION\",\"TIGER\",\"CHEETAH\",\"BROWN BEAR\",\"AMERICAN BLACK BEAR\",\"ICE BEAR\",\"SLOTH BEAR\",\"MONGOOSE\",\"MEERKAT\",\"TIGER BEETLE\",\"LADYBUG\",\"GROUND BEETLE\",\"LONG-HORNED BEETLE\",\"LEAF BEETLE\",\"DUNG BEETLE\",\"RHINOCEROS BEETLE\",\"WEEVIL\",\"FLY\",\"BEE\",\"ANT\",\"GRASSHOPPER\",\"CRICKET\",\"WALKING STICK\",\"COCKROACH\",\"MANTIS\",\"CICADA\",\"LEAFHOPPER\",\"LACEWING\",\"DRAGONFLY\",\"DAMSELFLY\",\"ADMIRAL\",\"RINGLET\",\"MONARCH\",\"CABBAGE BUTTERFLY\",\"SULPHUR BUTTERFLY\",\"LYCAENID\",\"STARFISH\",\"SEA URCHIN\",\"SEA CUCUMBER\",\"WOOD RABBIT\",\"HARE\",\"ANGORA\",\"HAMSTER\",\"PORCUPINE\",\"FOX SQUIRREL\",\"MARMOT\",\"BEAVER\",\"GUINEA PIG\",\"SORREL\",\"ZEBRA\",\"HOG\",\"WILD BOAR\",\"WARTHOG\",\"HIPPOPOTAMUS\",\"OX\",\"WATER BUFFALO\",\"BISON\",\"RAM\",\"BIGHORN\",\"IBEX\",\"HARTEBEEST\",\"IMPALA\",\"GAZELLE\",\"ARABIAN CAMEL\",\"LLAMA\",\"WEASEL\",\"MINK\",\"POLECAT\",\"BLACK-FOOTED FERRET\",\"OTTER\",\"SKUNK\",\"BADGER\",\"ARMADILLO\",\"THREE-TOED SLOTH\",\"ORANGUTAN\",\"GORILLA\",\"CHIMPANZEE\",\"GIBBON\",\"SIAMANG\",\"GUENON\",\"PATAS\",\"BABOON\",\"MACAQUE\",\"LANGUR\",\"COLOBUS\",\"PROBOSCIS MONKEY\",\"MARMOSET\",\"CAPUCHIN\",\"HOWLER MONKEY\",\"TITI\",\"SPIDER MONKEY\",\"SQUIRREL MONKEY\",\"MADAGASCAR CAT\",\"INDRI\",\"INDIAN ELEPHANT\",\"AFRICAN ELEPHANT\",\"LESSER PANDA\",\"GIANT PANDA\",\"BARRACOUTA\",\"EEL\",\"COHO\",\"ROCK BEAUTY\",\"ANEMONE FISH\",\"STURGEON\",\"GAR\",\"LIONFISH\",\"PUFFER\",\"ABACUS\",\"ABAYA\",\"ACADEMIC GOWN\",\"ACCORDION\",\"ACOUSTIC GUITAR\",\"AIRCRAFT CARRIER\",\"AIRLINER\",\"AIRSHIP\",\"ALTAR\",\"AMBULANCE\",\"AMPHIBIAN\",\"ANALOG CLOCK\",\"APIARY\",\"APRON\",\"ASHCAN\",\"ASSAULT RIFLE\",\"BACKPACK\",\"BAKERY\",\"BALANCE BEAM\",\"BALLOON\",\"BALLPOINT\",\"BAND AID\",\"BANJO\",\"BANNISTER\",\"BARBELL\",\"BARBER CHAIR\",\"BARBERSHOP\",\"BARN\",\"BAROMETER\",\"BARREL\",\"BARROW\",\"BASEBALL\",\"BASKETBALL\",\"BASSINET\",\"BASSOON\",\"BATHING CAP\",\"BATH TOWEL\",\"BATHTUB\",\"BEACH WAGON\",\"BEACON\",\"BEAKER\",\"BEARSKIN\",\"BEER BOTTLE\",\"BEER GLASS\",\"BELL COTE\",\"BIB\",\"BICYCLE-BUILT-FOR-TWO\",\"BIKINI\",\"BINDER\",\"BINOCULARS\",\"BIRDHOUSE\",\"BOATHOUSE\",\"BOBSLED\",\"BOLO TIE\",\"BONNET\",\"BOOKCASE\",\"BOOKSHOP\",\"BOTTLECAP\",\"BOW\",\"BOW TIE\",\"BRASS\",\"BRASSIERE\",\"BREAKWATER\",\"BREASTPLATE\",\"BROOM\",\"BUCKET\",\"BUCKLE\",\"BULLETPROOF VEST\",\"BULLET TRAIN\",\"BUTCHER SHOP\",\"CAB\",\"CALDRON\",\"CANDLE\",\"CANNON\",\"CANOE\",\"CAN OPENER\",\"CARDIGAN\",\"CAR MIRROR\",\"CAROUSEL\",\"CARPENTERS KIT\",\"CARTON\",\"CAR WHEEL\",\"CASH MACHINE\",\"CASSETTE\",\"CASSETTE PLAYER\",\"CASTLE\",\"CATAMARAN\",\"CD PLAYER\",\"CELLO\",\"CELLULAR TELEPHONE\",\"CHAIN\",\"CHAINLINK FENCE\",\"CHAIN MAIL\",\"CHAIN SAW\",\"CHEST\",\"CHIFFONIER\",\"CHIME\",\"CHINA CABINET\",\"CHRISTMAS STOCKING\",\"CHURCH\",\"CINEMA\",\"CLEAVER\",\"CLIFF DWELLING\",\"CLOAK\",\"CLOG\",\"COCKTAIL SHAKER\",\"COFFEE MUG\",\"COFFEEPOT\",\"COIL\",\"COMBINATION LOCK\",\"COMPUTER KEYBOARD\",\"CONFECTIONERY\",\"CONTAINER SHIP\",\"CONVERTIBLE\",\"CORKSCREW\",\"CORNET\",\"COWBOY BOOT\",\"COWBOY HAT\",\"CRADLE\",\"CRANE\",\"CRASH HELMET\",\"CRATE\",\"CRIB\",\"CROCK POT\",\"CROQUET BALL\",\"CRUTCH\",\"CUIRASS\",\"DAM\",\"DESK\",\"DESKTOP COMPUTER\",\"DIAL TELEPHONE\",\"DIAPER\",\"DIGITAL CLOCK\",\"DIGITAL WATCH\",\"DINING TABLE\",\"DISHRAG\",\"DISHWASHER\",\"DISK BRAKE\",\"DOCK\",\"DOGSLED\",\"DOME\",\"DOORMAT\",\"DRILLING PLATFORM\",\"DRUM\",\"DRUMSTICK\",\"DUMBBELL\",\"DUTCH OVEN\",\"ELECTRIC FAN\",\"ELECTRIC GUITAR\",\"ELECTRIC LOCOMOTIVE\",\"ENTERTAINMENT CENTER\",\"ENVELOPE\",\"ESPRESSO MAKER\",\"FACE POWDER\",\"FEATHER BOA\",\"FILE\",\"FIREBOAT\",\"FIRE ENGINE\",\"FIRE SCREEN\",\"FLAGPOLE\",\"FLUTE\",\"FOLDING CHAIR\",\"FOOTBALL HELMET\",\"FORKLIFT\",\"FOUNTAIN\",\"FOUNTAIN PEN\",\"FOUR-POSTER\",\"FREIGHT CAR\",\"FRENCH HORN\",\"FRYING PAN\",\"FUR COAT\",\"GARBAGE TRUCK\",\"GASMASK\",\"GAS PUMP\",\"GOBLET\",\"GO-KART\",\"GOLF BALL\",\"GOLFCART\",\"GONDOLA\",\"GONG\",\"GOWN\",\"GRAND PIANO\",\"GREENHOUSE\",\"GRILLE\",\"GROCERY STORE\",\"GUILLOTINE\",\"HAIR SLIDE\",\"HAIR SPRAY\",\"HALF TRACK\",\"HAMMER\",\"HAMPER\",\"HAND BLOWER\",\"HAND-HELD COMPUTER\",\"HANDKERCHIEF\",\"HARD DISC\",\"HARMONICA\",\"HARP\",\"HARVESTER\",\"HATCHET\",\"HOLSTER\",\"HOME THEATER\",\"HONEYCOMB\",\"HOOK\",\"HOOPSKIRT\",\"HORIZONTAL BAR\",\"HORSE CART\",\"HOURGLASS\",\"IPOD\",\"IRON\",\"JACK-O-LANTERN\",\"JEAN\",\"JEEP\",\"JERSEY\",\"JIGSAW PUZZLE\",\"JINRIKISHA\",\"JOYSTICK\",\"KIMONO\",\"KNEE PAD\",\"KNOT\",\"LAB COAT\",\"LADLE\",\"LAMPSHADE\",\"LAPTOP\",\"LAWN MOWER\",\"LENS CAP\",\"LETTER OPENER\",\"LIBRARY\",\"LIFEBOAT\",\"LIGHTER\",\"LIMOUSINE\",\"LINER\",\"LIPSTICK\",\"LOAFER\",\"LOTION\",\"LOUDSPEAKER\",\"LOUPE\",\"LUMBERMILL\",\"MAGNETIC COMPASS\",\"MAILBAG\",\"MAILBOX\",\"MAILLOT\",\"MAILLOT\",\"MANHOLE COVER\",\"MARACA\",\"MARIMBA\",\"MASK\",\"MATCHSTICK\",\"MAYPOLE\",\"MAZE\",\"MEASURING CUP\",\"MEDICINE CHEST\",\"MEGALITH\",\"MICROPHONE\",\"MICROWAVE\",\"MILITARY UNIFORM\",\"MILK CAN\",\"MINIBUS\",\"MINISKIRT\",\"MINIVAN\",\"MISSILE\",\"MITTEN\",\"MIXING BOWL\",\"MOBILE HOME\",\"MODEL T\",\"MODEM\",\"MONASTERY\",\"MONITOR\",\"MOPED\",\"MORTAR\",\"MORTARBOARD\",\"MOSQUE\",\"MOSQUITO NET\",\"MOTOR SCOOTER\",\"MOUNTAIN BIKE\",\"MOUNTAIN TENT\",\"MOUSE\",\"MOUSETRAP\",\"MOVING VAN\",\"MUZZLE\",\"NAIL\",\"NECK BRACE\",\"NECKLACE\",\"NIPPLE\",\"NOTEBOOK\",\"OBELISK\",\"OBOE\",\"OCARINA\",\"ODOMETER\",\"OIL FILTER\",\"ORGAN\",\"OSCILLOSCOPE\",\"OVERSKIRT\",\"OXCART\",\"OXYGEN MASK\",\"PACKET\",\"PADDLE\",\"PADDLEWHEEL\",\"PADLOCK\",\"PAINTBRUSH\",\"PAJAMA\",\"PALACE\",\"PANPIPE\",\"PAPER TOWEL\",\"PARACHUTE\",\"PARALLEL BARS\",\"PARK BENCH\",\"PARKING METER\",\"PASSENGER CAR\",\"PATIO\",\"PAY-PHONE\",\"PEDESTAL\",\"PENCIL BOX\",\"PENCIL SHARPENER\",\"PERFUME\",\"PETRI DISH\",\"PHOTOCOPIER\",\"PICK\",\"PICKELHAUBE\",\"PICKET FENCE\",\"PICKUP\",\"PIER\",\"PIGGY BANK\",\"PILL BOTTLE\",\"PILLOW\",\"PING-PONG BALL\",\"PINWHEEL\",\"PIRATE\",\"PITCHER\",\"PLANE\",\"PLANETARIUM\",\"PLASTIC BAG\",\"PLATE RACK\",\"PLOW\",\"PLUNGER\",\"POLAROID CAMERA\",\"POLE\",\"POLICE VAN\",\"PONCHO\",\"POOL TABLE\",\"POP BOTTLE\",\"POT\",\"POTTERS WHEEL\",\"POWER DRILL\",\"PRAYER RUG\",\"PRINTER\",\"PRISON\",\"PROJECTILE\",\"PROJECTOR\",\"PUCK\",\"PUNCHING BAG\",\"PURSE\",\"QUILL\",\"QUILT\",\"RACER\",\"RACKET\",\"RADIATOR\",\"RADIO\",\"RADIO TELESCOPE\",\"RAIN BARREL\",\"RECREATIONAL VEHICLE\",\"REEL\",\"REFLEX CAMERA\",\"REFRIGERATOR\",\"REMOTE CONTROL\",\"RESTAURANT\",\"REVOLVER\",\"RIFLE\",\"ROCKING CHAIR\",\"ROTISSERIE\",\"RUBBER ERASER\",\"RUGBY BALL\",\"RULE\",\"RUNNING SHOE\",\"SAFE\",\"SAFETY PIN\",\"SALTSHAKER\",\"SANDAL\",\"SARONG\",\"SAX\",\"SCABBARD\",\"SCALE\",\"SCHOOL BUS\",\"SCHOONER\",\"SCOREBOARD\",\"SCREEN\",\"SCREW\",\"SCREWDRIVER\",\"SEAT BELT\",\"SEWING MACHINE\",\"SHIELD\",\"SHOE SHOP\",\"SHOJI\",\"SHOPPING BASKET\",\"SHOPPING CART\",\"SHOVEL\",\"SHOWER CAP\",\"SHOWER CURTAIN\",\"SKI\",\"SKI MASK\",\"SLEEPING BAG\",\"SLIDE RULE\",\"SLIDING DOOR\",\"SLOT\",\"SNORKEL\",\"SNOWMOBILE\",\"SNOWPLOW\",\"SOAP DISPENSER\",\"SOCCER BALL\",\"SOCK\",\"SOLAR DISH\",\"SOMBRERO\",\"SOUP BOWL\",\"SPACE BAR\",\"SPACE HEATER\",\"SPACE SHUTTLE\",\"SPATULA\",\"SPEEDBOAT\",\"SPIDER WEB\",\"SPINDLE\",\"SPORTS CAR\",\"SPOTLIGHT\",\"STAGE\",\"STEAM LOCOMOTIVE\",\"STEEL ARCH BRIDGE\",\"STEEL DRUM\",\"STETHOSCOPE\",\"STOLE\",\"STONE WALL\",\"STOPWATCH\",\"STOVE\",\"STRAINER\",\"STREETCAR\",\"STRETCHER\",\"STUDIO COUCH\",\"STUPA\",\"SUBMARINE\",\"SUIT\",\"SUNDIAL\",\"SUNGLASS\",\"SUNGLASSES\",\"SUNSCREEN\",\"SUSPENSION BRIDGE\",\"SWAB\",\"SWEATSHIRT\",\"SWIMMING TRUNKS\",\"SWING\",\"SWITCH\",\"SYRINGE\",\"TABLE LAMP\",\"TANK\",\"TAPE PLAYER\",\"TEAPOT\",\"TEDDY\",\"TELEVISION\",\"TENNIS BALL\",\"THATCH\",\"THEATER CURTAIN\",\"THIMBLE\",\"THRESHER\",\"THRONE\",\"TILE ROOF\",\"TOASTER\",\"TOBACCO SHOP\",\"TOILET SEAT\",\"TORCH\",\"TOTEM POLE\",\"TOW TRUCK\",\"TOYSHOP\",\"TRACTOR\",\"TRAILER TRUCK\",\"TRAY\",\"TRENCH COAT\",\"TRICYCLE\",\"TRIMARAN\",\"TRIPOD\",\"TRIUMPHAL ARCH\",\"TROLLEYBUS\",\"TROMBONE\",\"TUB\",\"TURNSTILE\",\"TYPEWRITER KEYBOARD\",\"UMBRELLA\",\"UNICYCLE\",\"UPRIGHT\",\"VACUUM\",\"VASE\",\"VAULT\",\"VELVET\",\"VENDING MACHINE\",\"VESTMENT\",\"VIADUCT\",\"VIOLIN\",\"VOLLEYBALL\",\"WAFFLE IRON\",\"WALL CLOCK\",\"WALLET\",\"WARDROBE\",\"WARPLANE\",\"WASHBASIN\",\"WASHER\",\"WATER BOTTLE\",\"WATER JUG\",\"WATER TOWER\",\"WHISKEY JUG\",\"WHISTLE\",\"WIG\",\"WINDOW SCREEN\",\"WINDOW SHADE\",\"WINDSOR TIE\",\"WINE BOTTLE\",\"WING\",\"WOK\",\"WOODEN SPOON\",\"WOOL\",\"WORM FENCE\",\"WRECK\",\"YAWL\",\"YURT\",\"WEB SITE\",\"COMIC BOOK\",\"CROSSWORD PUZZLE\",\"STREET SIGN\",\"TRAFFIC LIGHT\",\"BOOK JACKET\",\"MENU\",\"PLATE\",\"GUACAMOLE\",\"CONSOMME\",\"HOT POT\",\"TRIFLE\",\"ICE CREAM\",\"ICE LOLLY\",\"FRENCH LOAF\",\"BAGEL\",\"PRETZEL\",\"CHEESEBURGER\",\"HOTDOG\",\"MASHED POTATO\",\"HEAD CABBAGE\",\"BROCCOLI\",\"CAULIFLOWER\",\"ZUCCHINI\",\"SPAGHETTI SQUASH\",\"ACORN SQUASH\",\"BUTTERNUT SQUASH\",\"CUCUMBER\",\"ARTICHOKE\",\"BELL PEPPER\",\"CARDOON\",\"MUSHROOM\",\"GRANNY SMITH\",\"STRAWBERRY\",\"ORANGE\",\"LEMON\",\"FIG\",\"PINEAPPLE\",\"BANANA\",\"JACKFRUIT\",\"CUSTARD APPLE\",\"POMEGRANATE\",\"HAY\",\"CARBONARA\",\"CHOCOLATE SAUCE\",\"DOUGH\",\"MEAT LOAF\",\"PIZZA\",\"POTPIE\",\"BURRITO\",\"RED WINE\",\"ESPRESSO\",\"CUP\",\"EGGNOG\",\"ALP\",\"BUBBLE\",\"CLIFF\",\"CORAL REEF\",\"GEYSER\",\"LAKESIDE\",\"PROMONTORY\",\"SANDBAR\",\"SEASHORE\",\"VALLEY\",\"VOLCANO\",\"BALLPLAYER\",\"GROOM\",\"SCUBA DIVER\",\"RAPESEED\",\"DAISY\",\"LADY SLIPPER\",\"CORN\",\"ACORN\",\"HIP\",\"BUCKEYE\",\"CORAL FUNGUS\",\"AGARIC\",\"GYROMITRA\",\"STINKHORN\",\"EARTHSTAR\",\"HEN-OF-THE-WOODS\",\"BOLETE\",\"EAR\",\"TOILET TISSUE\"];const T={\"text-classification\":{models:[\"@cf/huggingface/distilbert-sst-2-int8\",\"@cf/jpmorganchase/roberta-spam\"],class:class{modelSettings;inputs;preProcessedInputs;postProcessedOutputs;tensors;schema={input:{type:\"object\",properties:{text:{type:\"string\"}},required:[\"text\"]},output:{type:\"array\",contentType:\"application/json\",items:{type:\"object\",properties:{score:{type:\"number\"},label:{type:\"string\"}}}}};constructor(e,t){this.inputs=e,this.modelSettings=t}preProcessing(){this.preProcessedInputs=this.inputs}generateTensors(t){return this.modelSettings.generateTensorsFunc?this.modelSettings.generateTensorsFunc(t):[new a(e.String,[t.text],{shape:[1],name:\"input_text\"})]}postProcessing(e){this.postProcessedOutputs=[{label:\"NEGATIVE\",score:e.logits.value[0][0]},{label:\"POSITIVE\",score:e.logits.value[0][1]}]}},id:\"19606750-23ed-4371-aab2-c20349b53a60\"},\"text-to-image\":{models:[\"@cf/stabilityai/stable-diffusion-xl-base-1.0\",\"@cf/runwayml/stable-diffusion-v1-5-inpainting\",\"@cf/runwayml/stable-diffusion-v1-5-img2img\",\"@cf/lykon/dreamshaper-8-lcm\",\"@cf/bytedance/stable-diffusion-xl-lightning\"],class:class{modelSettings;inputs;preProcessedInputs;postProcessedOutputs;tensors;schema={input:{type:\"object\",properties:{prompt:{type:\"string\"},image:{type:\"array\",items:{type:\"number\"}},mask:{type:\"array\",items:{type:\"number\"}},num_steps:{type:\"integer\",default:20,maximum:20},strength:{type:\"number\",default:1},guidance:{type:\"number\",default:7.5}},required:[\"prompt\"]},output:{type:\"string\",contentType:\"image/png\",format:\"binary\"}};constructor(e,t){this.inputs=e,this.modelSettings=t}preProcessing(){this.preProcessedInputs=this.inputs}generateTensors(t){if(this.modelSettings.generateTensorsFunc)return this.modelSettings.generateTensorsFunc(t);{let s=[new a(e.String,[t.prompt],{shape:[1],name:\"input_text\"}),new a(e.Int32,[t.num_steps||this.schema.input.properties.num_steps.default],{shape:[1],name:\"num_steps\"})];return t.image&&(s=[...s,new a(e.String,[\"\"],{shape:[1],name:\"negative_prompt\"}),new a(e.Float32,[t.strength||this.schema.input.properties.strength.default],{shape:[1],name:\"strength\"}),new a(e.Float32,[t.guidance||this.schema.input.properties.guidance.default],{shape:[1],name:\"guidance\"}),new a(e.Uint8,t.image,{shape:[1,t.image.length],name:\"image\"})]),t.mask&&(s=[...s,new a(e.Uint8,t.mask,{shape:[1,t.mask.length],name:\"mask_image\"})]),s}}OldgenerateTensors(t){return this.modelSettings.generateTensorsFunc?this.modelSettings.generateTensorsFunc(t):t.image&&t.mask?[new a(e.String,[t.prompt],{shape:[1],name:\"input_text\"}),new a(e.String,[\"\"],{shape:[1],name:\"negative_prompt\"}),new a(e.Int32,[t.num_steps||20],{shape:[1],name:\"num_steps\"}),new a(e.Float32,[t.strength||1],{shape:[1],name:\"strength\"}),new a(e.Float32,[t.guidance||7.5],{shape:[1],name:\"guidance\"}),new a(e.Uint8,t.image,{shape:[1,t.image.length],name:\"image\"}),new a(e.Uint8,t.mask,{shape:[1,t.mask.length],name:\"mask_image\"})]:t.image?[new a(e.String,[t.prompt],{shape:[1],name:\"input_text\"}),new a(e.String,[\"\"],{shape:[1],name:\"negative_prompt\"}),new a(e.Float32,[t.strength||1],{shape:[1],name:\"strength\"}),new a(e.Float32,[t.guidance||7.5],{shape:[1],name:\"guidance\"}),new a(e.Uint8,t.image,{shape:[1,t.image.length],name:\"image\"}),new a(e.Int32,[t.num_steps||20],{shape:[1],name:\"num_steps\"})]:[new a(e.String,[t.prompt],{shape:[1],name:\"input_text\"}),new a(e.Int32,[t.num_steps||20],{shape:[1],name:\"num_steps\"})]}postProcessing(e){this.postProcessedOutputs=new Uint8Array(e.output_image.value)}},id:\"3d6e1f35-341b-4915-a6c8-9a7142a9033a\"},\"sentence-similarity\":{models:[\"@hf/sentence-transformers/all-minilm-l6-v2\"],class:class{modelSettings;inputs;preProcessedInputs;postProcessedOutputs;tensors;schema={input:{type:\"object\",properties:{source:{type:\"string\"},sentences:{type:\"array\",items:{type:\"string\"}}},required:[\"source\",\"sentences\"]},output:{type:\"array\",contentType:\"application/json\",items:{type:\"number\"}}};constructor(e,t){this.inputs=e,this.modelSettings=t}preProcessing(){this.preProcessedInputs=this.inputs}generateTensors(t){return this.modelSettings.generateTensorsFunc?this.modelSettings.generateTensorsFunc(t):[new a(e.String,[t.source],{shape:[1],name:\"source_sentence\"}),new a(e.String,t.sentences,{shape:[t.sentences.length],name:\"sentences\"})]}postProcessing(e){this.postProcessedOutputs=e.scores.value}},id:\"69bf4e84-441e-401a-bdfc-256fd54d0fff\"},\"text-embeddings\":{models:[\"@cf/baai/bge-small-en-v1.5\",\"@cf/baai/bge-base-en-v1.5\",\"@cf/baai/bge-large-en-v1.5\",\"@hf/baai/bge-base-en-v1.5\"],class:class{modelSettings;inputs;preProcessedInputs;postProcessedOutputs;tensors;schema={input:{type:\"object\",properties:{text:{oneOf:[{type:\"string\"},{type:\"array\",items:{type:\"string\"},maxItems:100}]}},required:[\"text\"]},output:{type:\"object\",contentType:\"application/json\",properties:{shape:{type:\"array\",items:{type:\"number\"}},data:{type:\"array\",items:{type:\"array\",items:{type:\"number\"}}}}}};constructor(e,t){this.inputs=e,this.modelSettings=t}preProcessing(){this.preProcessedInputs=this.inputs}generateTensors(t){return this.modelSettings.generateTensorsFunc?this.modelSettings.generateTensorsFunc(t):[new a(e.String,Array.isArray(t.text)?t.text:[t.text],{shape:[Array.isArray(t.text)?t.text.length:[t.text].length],name:\"input_text\"})]}postProcessing(e){this.modelSettings.postProcessingFunc?this.postProcessedOutputs=this.modelSettings.postProcessingFunc(e,this.preProcessedInputs):this.postProcessedOutputs={shape:e.embeddings.shape,data:e.embeddings.value}}},id:\"0137cdcf-162a-4108-94f2-1ca59e8c65ee\"},\"speech-recognition\":{models:[\"@cf/openai/whisper\"],class:class{modelSettings;inputs;preProcessedInputs;postProcessedOutputs;tensors;schema={input:{oneOf:[{type:\"string\",format:\"binary\"},{type:\"object\",properties:{audio:{type:\"array\",items:{type:\"number\"}}}}]},output:{type:\"object\",contentType:\"application/json\",properties:{text:{type:\"string\"},word_count:{type:\"number\"},words:{type:\"array\",items:{type:\"object\",properties:{word:{type:\"string\"},start:{type:\"number\"},end:{type:\"number\"}}}}},required:[\"text\"]}};constructor(e,t){this.inputs=e,this.modelSettings=t}preProcessing(){this.preProcessedInputs=this.inputs}generateTensors(t){return this.modelSettings.generateTensorsFunc?this.modelSettings.generateTensorsFunc(t):[new a(e.Uint8,t.audio,{shape:[1,t.audio.length],name:\"audio\"})]}postProcessing(e){this.modelSettings.postProcessingFunc?this.postProcessedOutputs=this.modelSettings.postProcessingFunc(e,this.preProcessedInputs):this.postProcessedOutputs={text:e.name.value[0].trim()}}},id:\"dfce1c48-2a81-462e-a7fd-de97ce985207\"},\"image-classification\":{models:[\"@cf/microsoft/resnet-50\"],class:class{modelSettings;inputs;preProcessedInputs;postProcessedOutputs;tensors;schema={input:{oneOf:[{type:\"string\",format:\"binary\"},{type:\"object\",properties:{image:{type:\"array\",items:{type:\"number\"}}}}]},output:{type:\"array\",contentType:\"application/json\",items:{type:\"object\",properties:{score:{type:\"number\"},label:{type:\"string\"}}}}};constructor(e,t){this.inputs=e,this.modelSettings=t}preProcessing(){this.preProcessedInputs=this.inputs}generateTensors(t){return this.modelSettings.generateTensorsFunc?this.modelSettings.generateTensorsFunc(t):[new a(e.Uint8,t.image,{shape:[1,t.image.length],name:\"input\"})]}postProcessing(e){const t=[],s=e.output.value[0];for(const e in s)t.push({label:I[e],score:s[e]});t.sort(((e,t)=>t.score-e.score)),this.postProcessedOutputs=t.slice(0,5)}},id:\"00cd182b-bf30-4fc4-8481-84a3ab349657\"},\"object-detection\":{models:[\"@cf/facebook/detr-resnet-50\"],class:class{modelSettings;inputs;preProcessedInputs;postProcessedOutputs;tensors;schema={input:{oneOf:[{type:\"string\",format:\"binary\"},{type:\"object\",properties:{image:{type:\"array\",items:{type:\"number\"}}}}]},output:{type:\"array\",contentType:\"application/json\",items:{type:\"object\",properties:{score:{type:\"number\"},label:{type:\"string\"},box:{type:\"object\",properties:{xmin:{type:\"number\"},ymin:{type:\"number\"},xmax:{type:\"number\"},ymax:{type:\"number\"}}}}}}};constructor(e,t){this.inputs=e,this.modelSettings=t}preProcessing(){this.preProcessedInputs=this.inputs}generateTensors(t){return this.modelSettings.generateTensorsFunc?this.modelSettings.generateTensorsFunc(t):[new a(e.Uint8,t.image,{shape:[1,t.image.length],name:\"input\"})]}postProcessing(e){const t=e.scores.value[0].map(((t,s)=>({score:t,label:e.name.value[e.labels.value[0][s]],box:{xmin:e.boxes.value[0][s][0],ymin:e.boxes.value[0][s][1],xmax:e.boxes.value[0][s][2],ymax:e.boxes.value[0][s][3]}})));this.postProcessedOutputs=t.sort(((e,t)=>t.score-e.score))}},id:\"9c178979-90d9-49d8-9e2c-0f1cf01815d4\"},\"text-generation\":{models:[\"@cf/meta/llama-2-7b-chat-int8\",\"@cf/mistral/mistral-7b-instruct-v0.1\",\"@cf/meta/llama-2-7b-chat-fp16\",\"@hf/thebloke/llama-2-13b-chat-awq\",\"@hf/thebloke/zephyr-7b-beta-awq\",\"@hf/thebloke/mistral-7b-instruct-v0.1-awq\",\"@hf/thebloke/codellama-7b-instruct-awq\",\"@hf/thebloke/openchat_3.5-awq\",\"@hf/thebloke/openhermes-2.5-mistral-7b-awq\",\"@hf/thebloke/starling-lm-7b-alpha-awq\",\"@hf/thebloke/orca-2-13b-awq\",\"@hf/thebloke/neural-chat-7b-v3-1-awq\",\"@hf/thebloke/llamaguard-7b-awq\",\"@hf/thebloke/deepseek-coder-6.7b-base-awq\",\"@hf/thebloke/deepseek-coder-6.7b-instruct-awq\",\"@cf/deepseek-ai/deepseek-math-7b-base\",\"@cf/deepseek-ai/deepseek-math-7b-instruct\",\"@cf/defog/sqlcoder-7b-2\",\"@cf/openchat/openchat-3.5-0106\",\"@cf/tiiuae/falcon-7b-instruct\",\"@cf/thebloke/discolm-german-7b-v1-awq\",\"@cf/qwen/qwen1.5-0.5b-chat\",\"@cf/qwen/qwen1.5-1.8b-chat\",\"@cf/qwen/qwen1.5-7b-chat-awq\",\"@cf/qwen/qwen1.5-14b-chat-awq\",\"@cf/tinyllama/tinyllama-1.1b-chat-v1.0\",\"@cf/microsoft/phi-2\",\"@cf/thebloke/yarn-mistral-7b-64k-awq\"],class:class{modelSettings;inputs;preProcessedInputs;postProcessedOutputs;tensors;schema={input:{type:\"object\",oneOf:[{properties:{prompt:{type:\"string\",maxLength:4096},raw:{type:\"boolean\",default:!1},stream:{type:\"boolean\",default:!1},max_tokens:{type:\"integer\",default:256}},required:[\"prompt\"]},{properties:{messages:{type:\"array\",items:{type:\"object\",properties:{role:{type:\"string\"},content:{type:\"string\",maxLength:4096}},required:[\"role\",\"content\"]}},stream:{type:\"boolean\",default:!1},max_tokens:{type:\"integer\",default:256}},required:[\"messages\"]}]},output:{oneOf:[{type:\"object\",contentType:\"application/json\",properties:{response:{type:\"string\"}}},{type:\"string\",contentType:\"text/event-stream\",format:\"binary\"}]}};constructor(e,t){this.inputs=e,this.modelSettings=t||{experimental:!0,inputsDefaultsStream:{max_tokens:512},inputsDefaults:{max_tokens:256},preProcessingArgs:{promptTemplate:\"inst\",defaultContext:\"\"}}}preProcessing(){this.inputs.stream&&this.modelSettings.inputsDefaultsStream?this.inputs={...this.modelSettings.inputsDefaultsStream,...this.inputs}:this.modelSettings.inputsDefaults&&(this.inputs={...this.modelSettings.inputsDefaults,...this.inputs});let e=\"\";e=void 0===this.inputs.messages?1==this.inputs.raw?this.inputs.prompt:o([{role:\"system\",content:this.modelSettings.preProcessingArgs.defaultContext},{role:\"user\",content:this.inputs.prompt}],this.modelSettings.preProcessingArgs.promptTemplate):o(this.inputs.messages,this.modelSettings.preProcessingArgs.promptTemplate),this.preProcessedInputs={prompt:e,max_tokens:this.inputs.max_tokens,stream:!!this.inputs.stream}}generateTensors(t){return this.modelSettings.generateTensorsFunc?this.modelSettings.generateTensorsFunc(t):[new a(e.String,[t.prompt],{shape:[1],name:\"INPUT_0\"}),new a(e.Uint32,[t.max_tokens],{shape:[1],name:\"INPUT_1\"})]}postProcessing(e){this.modelSettings.postProcessingFunc?this.postProcessedOutputs={response:this.modelSettings.postProcessingFunc(e,this.preProcessedInputs)}:this.postProcessedOutputs={response:e.name.value[0]}}postProcessingStream(e,t){return this.modelSettings.postProcessingFuncStream?{response:this.modelSettings.postProcessingFuncStream(e,this.preProcessedInputs,t)}:{response:e.name.value[0]}}},id:\"c329a1f9-323d-4e91-b2aa-582dd4188d34\"},translation:{models:[\"@cf/meta/m2m100-1.2b\"],class:class{modelSettings;inputs;preProcessedInputs;postProcessedOutputs;tensors;schema={input:{type:\"object\",properties:{text:{type:\"string\"},source_lang:{type:\"string\",default:\"en\"},target_lang:{type:\"string\"}},required:[\"text\",\"target_lang\"]},output:{type:\"object\",contentType:\"application/json\",properties:{translated_text:{type:\"string\"}}}};constructor(e,t){this.inputs=e,this.modelSettings=t}preProcessing(){this.preProcessedInputs=this.inputs}generateTensors(t){return this.modelSettings.generateTensorsFunc?this.modelSettings.generateTensorsFunc(t):[new a(e.String,[t.text],{shape:[1,1],name:\"text\"}),new a(e.String,[t.source_lang||\"en\"],{shape:[1,1],name:\"source_lang\"}),new a(e.String,[t.target_lang],{shape:[1,1],name:\"target_lang\"})]}postProcessing(e){this.postProcessedOutputs={translated_text:e.name.value[0]}}},id:\"f57d07cb-9087-487a-bbbf-bc3e17fecc4b\"},summarization:{models:[\"@cf/facebook/bart-large-cnn\"],class:class{modelSettings;inputs;preProcessedInputs;postProcessedOutputs;tensors;schema={input:{type:\"object\",properties:{input_text:{type:\"string\"},max_length:{type:\"integer\",default:1024}},required:[\"input_text\"]},output:{type:\"object\",contentType:\"application/json\",properties:{summary:{type:\"string\"}}}};constructor(e,t){this.inputs=e,this.modelSettings=t}preProcessing(){this.preProcessedInputs=this.inputs}generateTensors(t){return this.modelSettings.generateTensorsFunc?this.modelSettings.generateTensorsFunc(t):[new a(e.Int32,[t.max_length||this.schema.input.properties.max_length.default],{shape:[1],name:\"max_length\"}),new a(e.String,[t.input_text],{shape:[1],name:\"input_text\"})]}postProcessing(e){this.postProcessedOutputs={summary:e.name.value[0]}}},id:\"6f4e65d8-da0f-40d2-9aa4-db582a5a04fd\"},\"image-to-text\":{models:[\"@cf/unum/uform-gen2-qwen-500m\"],class:class{modelSettings;inputs;preProcessedInputs;postProcessedOutputs;tensors;schema={input:{oneOf:[{type:\"string\",format:\"binary\"},{type:\"object\",properties:{image:{type:\"array\",items:{type:\"number\"}},prompt:{type:\"string\"},max_tokens:{type:\"integer\",default:512}}}]},output:{type:\"object\",contentType:\"application/json\",properties:{description:{type:\"string\"}}}};constructor(e,t){this.inputs=e,this.modelSettings=t}preProcessing(){this.preProcessedInputs=this.inputs}generateTensors(t){return this.modelSettings.generateTensorsFunc?this.modelSettings.generateTensorsFunc(t):[new a(e.Int32,[t.max_tokens||this.schema.input.oneOf.filter((e=>\"object\"==e.type))[0].properties.max_tokens.default],{shape:[1],name:\"max_tokens\"}),new a(e.String,[t.prompt],{shape:[1],name:\"prompt\"}),new a(e.Uint8,t.image,{shape:[1,t.image.length],name:\"image\"})]}postProcessing(e){this.modelSettings.postProcessingFunc?this.postProcessedOutputs={description:this.modelSettings.postProcessingFunc(e,this.preProcessedInputs)}:this.postProcessedOutputs={description:e.name.value[0]}}},id:\"882a91d1-c331-4eec-bdad-834c919942a8\"}};class S extends Error{httpCode;constructor(e,t){super(e),this.name=\"InferenceUpstreamError\",this.httpCode=t}}class N{binding;options;logs;lastRequestId;constructor(e,t={}){if(!e)throw new Error(\"Ai binding is undefined. Please provide a valid binding.\");this.binding=e,this.options=t,this.lastRequestId=\"\"}async run(e,t){const s={method:\"POST\",body:JSON.stringify({inputs:t,options:{debug:this.options?.debug}}),headers:{...this.options?.sessionOptions?.extraHeaders||{},...this.options?.extraHeaders||{},\"content-encoding\":\"application/json\",\"cf-consn-sdk-version\":\"1.1.0\",\"cf-consn-model-id\":`${this.options.prefix?`${this.options.prefix}:`:\"\"}${e}`}},n=await this.binding.fetch(\"http://workers-binding.ai/run?version=2\",s);if(this.lastRequestId=n.headers.get(\"cf-ai-req-id\"),t.stream){if(!n.ok)throw new S(await n.text(),n.status);return n.body}{if(this.options.debug){let e=[];try{e=JSON.parse(atob(n.headers.get(\"cf-ai-logs\")))}catch(e){}this.logs=e}if(!n.ok)throw new S(await n.text(),n.status);const e=await new Response(n.body.pipeThrough(new DecompressionStream(\"gzip\")));if(!n.headers.get(\"content-type\")){console.log(\"Your current wrangler version has a known issue when using in local dev mode, please update to the latest.\");try{return await e.clone().json()}catch(t){return e.body}}return\"application/json\"===n.headers.get(\"content-type\")?await e.json():e.body}}getLogs(){return this.logs}}export{N as Ai,S as InferenceUpstreamError,T as modelMappings};\n", "import { Ai } from \"@cloudflare/ai\";\r\n\r\nexport async function onRequestPost(context) {\r\n  const req = context.request as Request;\r\n  const body = await req.arrayBuffer();\r\n  console.log(body);\r\n\r\n  if (!body) {\r\n    return new Response(\"No image provided\", { status: 400 });\r\n  }\r\n\r\n  const ai = new Ai(context.env.AI);\r\n\r\n  const response = await ai.run(\"@cf/unum/uform-gen2-qwen-500m\", {\r\n    image: [...new Uint8Array(body)],\r\n  });\r\n\r\n  return Response.json(response);\r\n}\r\n", "import { Ai } from \"@cloudflare/ai\";\r\n\r\nexport async function onRequestPost(context) {\r\n  const req = context.request as Request;\r\n  const body = await req.json();\r\n  console.log(body);\r\n\r\n  if (!body.imageDescription) {\r\n    return new Response(\"No image description provided\", { status: 400 });\r\n  }\r\n\r\n  const ai = new Ai(context.env.AI);\r\n\r\n  const response = await ai.run(\"@cf/meta/llama-2-7b-chat-fp16\", {\r\n    messages: [\r\n      {\r\n        role: \"system\",\r\n        content:\r\n          \"you are a creative writer that can spun up imaginative stories in a jiff.\",\r\n      },\r\n      { role: \"user\", content: body.imageDescription },\r\n    ],\r\n  });\r\n\r\n  return Response.json(response);\r\n}\r\n", "import { Ai } from \"@cloudflare/ai\";\r\n\r\nexport async function onRequestPost(context) {\r\n  const req = context.request as Request;\r\n  const body = await req.json();\r\n  console.log(body);\r\n\r\n  if (!body.imageDescription) {\r\n    return new Response(\"No image prompt provided\", { status: 400 });\r\n  }\r\n\r\n  const ai = new Ai(context.env.AI);\r\n\r\n  const result = await ai.run(\"@cf/lykon/dreamshaper-8-lcm\", {\r\n    prompt: body.imageDescription,\r\n  });\r\n\r\n  return new Response(result, {\r\n    headers: {\r\n      \"content-type\": \"image/png\",\r\n    },\r\n  });\r\n}\r\n", "import { onRequestPost as __api_describe_ts_onRequestPost } from \"D:\\\\Learning\\\\picstweakr\\\\functions\\\\api\\\\describe.ts\"\nimport { onRequestPost as __api_fiction_ts_onRequestPost } from \"D:\\\\Learning\\\\picstweakr\\\\functions\\\\api\\\\fiction.ts\"\nimport { onRequestPost as __api_image_ts_onRequestPost } from \"D:\\\\Learning\\\\picstweakr\\\\functions\\\\api\\\\image.ts\"\n\nexport const routes = [\n    {\n      routePath: \"/api/describe\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_describe_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/fiction\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_fiction_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/image\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_image_ts_onRequestPost],\n    },\n  ]", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\" } = options;\n  const defaultPattern = `[^${escapeString(options.delimiter || \"/#?\")}]+?`;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || defaultPattern,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? defaultPattern : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            route += `((?:${token.pattern})${token.modifier})`;\n          } else {\n            route += `(${token.pattern})${token.modifier}`;\n          }\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import { match } from \"path-to-regexp\";\n\n//note: this explicitly does not include the * character, as pages requires this\nconst escapeRegex = /[.+?^${}()|[\\]\\\\]/g;\n\ntype HTTPMethod =\n\t| \"HEAD\"\n\t| \"OPTIONS\"\n\t| \"GET\"\n\t| \"POST\"\n\t| \"PUT\"\n\t| \"PATCH\"\n\t| \"DELETE\";\n\n/* TODO: Grab these from @cloudflare/workers-types instead */\ntype Params<P extends string = string> = Record<P, string | string[]>;\n\ntype EventContext<Env, P extends string, Data> = {\n\trequest: Request;\n\tfunctionPath: string;\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n\tnext: (input?: Request | string, init?: RequestInit) => Promise<Response>;\n\tenv: Env & { ASSETS: { fetch: typeof fetch } };\n\tparams: Params<P>;\n\tdata: Data;\n};\n\ndeclare type PagesFunction<\n\tEnv = unknown,\n\tP extends string = string,\n\tData extends Record<string, unknown> = Record<string, unknown>\n> = (context: EventContext<Env, P, Data>) => Response | Promise<Response>;\n/* end @cloudflare/workers-types */\n\ntype RouteHandler = {\n\troutePath: string;\n\tmountPath: string;\n\tmethod?: HTTPMethod;\n\tmodules: PagesFunction[];\n\tmiddlewares: PagesFunction[];\n};\n\n// inject `routes` via ESBuild\ndeclare const routes: RouteHandler[];\n// define `__FALLBACK_SERVICE__` via ESBuild\ndeclare const __FALLBACK_SERVICE__: string;\n\n// expect an ASSETS fetcher binding pointing to the asset-server stage\ntype FetchEnv = {\n\t[name: string]: { fetch: typeof fetch };\n\tASSETS: { fetch: typeof fetch };\n};\n\ntype WorkerContext = {\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n};\n\nfunction* executeRequest(request: Request) {\n\tconst requestPath = new URL(request.url).pathname;\n\n\t// First, iterate through the routes (backwards) and execute \"middlewares\" on partial route matches\n\tfor (const route of [...routes].reverse()) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// replaces with \"\\\\$&\", this prepends a backslash to the matched string, e.g. \"[\" becomes \"\\[\"\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult) {\n\t\t\tfor (const handler of route.middlewares.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: mountMatchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then look for the first exact route match and execute its \"modules\"\n\tfor (const route of routes) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: true,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult && route.modules.length) {\n\t\t\tfor (const handler of route.modules.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: matchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default {\n\tasync fetch(\n\t\toriginalRequest: Request,\n\t\tenv: FetchEnv,\n\t\tworkerContext: WorkerContext\n\t) {\n\t\tlet request = originalRequest;\n\t\tconst handlerIterator = executeRequest(request);\n\t\tlet data = {}; // arbitrary data the user can set between functions\n\t\tlet isFailOpen = false;\n\n\t\tconst next = async (input?: RequestInfo, init?: RequestInit) => {\n\t\t\tif (input !== undefined) {\n\t\t\t\tlet url = input;\n\t\t\t\tif (typeof input === \"string\") {\n\t\t\t\t\turl = new URL(input, request.url).toString();\n\t\t\t\t}\n\t\t\t\trequest = new Request(url, init);\n\t\t\t}\n\n\t\t\tconst result = handlerIterator.next();\n\t\t\t// Note we can't use `!result.done` because this doesn't narrow to the correct type\n\t\t\tif (result.done === false) {\n\t\t\t\tconst { handler, params, path } = result.value;\n\t\t\t\tconst context = {\n\t\t\t\t\trequest: new Request(request.clone()),\n\t\t\t\t\tfunctionPath: path,\n\t\t\t\t\tnext,\n\t\t\t\t\tparams,\n\t\t\t\t\tget data() {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t},\n\t\t\t\t\tset data(value) {\n\t\t\t\t\t\tif (typeof value !== \"object\" || value === null) {\n\t\t\t\t\t\t\tthrow new Error(\"context.data must be an object\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// user has overriden context.data, so we need to merge it with the existing data\n\t\t\t\t\t\tdata = value;\n\t\t\t\t\t},\n\t\t\t\t\tenv,\n\t\t\t\t\twaitUntil: workerContext.waitUntil.bind(workerContext),\n\t\t\t\t\tpassThroughOnException: () => {\n\t\t\t\t\t\tisFailOpen = true;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst response = await handler(context);\n\n\t\t\t\tif (!(response instanceof Response)) {\n\t\t\t\t\tthrow new Error(\"Your Pages function should return a Response\");\n\t\t\t\t}\n\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else if (__FALLBACK_SERVICE__) {\n\t\t\t\t// There are no more handlers so finish with the fallback service (`env.ASSETS.fetch` in Pages' case)\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else {\n\t\t\t\t// There was not fallback service so actually make the request to the origin.\n\t\t\t\tconst response = await fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\treturn await next();\n\t\t} catch (error) {\n\t\t\tif (isFailOpen) {\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t},\n};\n\n// This makes a Response mutable\nconst cloneResponse = (response: Response) =>\n\t// https://fetch.spec.whatwg.org/#null-body-status\n\tnew Response(\n\t\t[101, 204, 205, 304].includes(response.status) ? null : response.body,\n\t\tresponse\n\t);\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"D:\\\\Learning\\\\picstweakr\\\\node_modules\\\\wrangler\\\\templates\\\\pages-template-worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"D:\\\\Learning\\\\picstweakr\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"D:\\\\Learning\\\\picstweakr\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\t\t\t\t\n\t\t\t\tworker.middleware = [\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default,\n\t\t\t\t\t...(worker.middleware ?? []),\n\t\t\t\t].filter(Boolean);\n\t\t\t\t\n\t\t\t\texport * from \"D:\\\\Learning\\\\picstweakr\\\\node_modules\\\\wrangler\\\\templates\\\\pages-template-worker.ts\";\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY from \"D:\\\\Learning\\\\picstweakr\\\\.wrangler\\\\tmp\\\\bundle-jluBZ1\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"D:\\\\Learning\\\\picstweakr\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type {\n\tWithMiddleware,\n\tWorkerEntrypointConstructor,\n} from \"D:\\\\Learning\\\\picstweakr\\\\.wrangler\\\\tmp\\\\bundle-jluBZ1\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"D:\\\\Learning\\\\picstweakr\\\\.wrangler\\\\tmp\\\\bundle-jluBZ1\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(\n\tworker: WithMiddleware<ExportedHandler>\n): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (worker.middleware === undefined || worker.middleware.length === 0) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of worker.middleware) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WithMiddleware<WorkerEntrypointConstructor>\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (klass.middleware === undefined || klass.middleware.length === 0) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of klass.middleware) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["e", "e", "e", "t", "onRequestPost", "onRequestPost", "onRequestPost", "i", "value", "_a", "result", "i", "e", "e"]
}
